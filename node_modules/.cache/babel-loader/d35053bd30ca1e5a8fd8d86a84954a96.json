{"ast":null,"code":"var _jsxFileName = \"/Users/andrejzaharcenko/Desktop/auth/vk-auth/src/common/FormsControl/FormsControl.js\";\nimport React from \"react\";\nimport s from \"./FormsControl.module.css\";\nexport const Input = ({\n  input,\n  meta,\n  ...props\n}) => {\n  let hasError = meta.touched && meta.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.formControl + \" \" + (hasError ? s.error : \" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 26\n    }\n  }, \" \", meta.error));\n};","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/auth/vk-auth/src/common/FormsControl/FormsControl.js"],"names":["React","s","Input","input","meta","props","hasError","touched","error","formControl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,2BAAd;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAc,KAAGC;AAAjB,CAAD,KAA2B;AAC5C,MAAIC,QAAQ,GAAGF,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAApC;AACA,sBACI;AAAK,IAAA,SAAS,EAAEP,CAAC,CAACQ,WAAF,GAAgB,GAAhB,IAAuBH,QAAQ,GAAEL,CAAC,CAACO,KAAJ,GAAU,GAAzC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,+CAAWL,KAAX,EAAsBE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKC,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQF,IAAI,CAACI,KAAb,CAHjB,CADJ;AAQH,CAVM","sourcesContent":["import React from \"react\";\nimport s from \"./FormsControl.module.css\";\n\nexport const Input = ({input, meta, ...props})=>{\n    let hasError = meta.touched && meta.error;\n    return(\n        <div className={s.formControl + \" \" + (hasError? s.error:\" \") }>\n            <input {...input} {...props}/>\n            <br/>\n            {hasError && <span> {meta.error}</span>}\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}